AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: FitX API - AWS SAM template for Express on Lambda + API Gateway (HTTP API)

Parameters:
  VpcSubnetIds:
    Type: String
    Default: ""
    Description: Comma-separated subnet IDs for Lambda (private subnets with NAT recommended)
  VpcSecurityGroupIds:
    Type: String
    Default: ""
    Description: Comma-separated security group IDs for Lambda ENIs

Conditions:
  UseVPC: !And
    - !Not [ !Equals [ !Ref VpcSubnetIds, "" ] ]
    - !Not [ !Equals [ !Ref VpcSecurityGroupIds, "" ] ]

Globals:
  Function:
    Timeout: 30
    MemorySize: 2048
    Architectures:
      - arm64
    Environment:
      Variables:
        NODE_ENV: production
        NODE_OPTIONS: --enable-source-maps
        # Allow Amplify domains by default; you can override with a specific domain later
        CORS_ORIGIN: .amplifyapp.com
        # Optional: set one or both to your frontend URL for CORS allowlist in the app
        WEB_URL: ""
        FRONTEND_URL: ""
        # Secrets are loaded at runtime from SSM and Secrets Manager
        SSM_DATABASE_URL_PARAM: "/my-fitness-app/DATABASE_URL"
        SSM_JWT_SECRET_PARAM: "/my-fitness-app/JWT_SECRET"
        SECRETS_OPENAI_API_KEY_NAME: "my-fitness-app/OPENAI_API_KEY"

Resources:
  AppHttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      CorsConfiguration:
        AllowMethods: ['*']
        AllowHeaders: ['*']
        AllowOrigins: ['*']

  PrismaLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: my-fitness-app-prisma-layer
      Description: Prisma Client (linux-arm64-openssl-3.0.x)
      ContentUri: layers/prisma
      CompatibleRuntimes:
        - nodejs20.x
      RetentionPolicy: Delete

  ApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Zip
      CodeUri: server
      Handler: lambda-handler.handler
      Runtime: nodejs20.x
      Layers:
        - !Ref PrismaLayer
      VpcConfig: !If
        - UseVPC
        - SubnetIds: !Split [",", !Ref VpcSubnetIds]
          SecurityGroupIds: !Split [",", !Ref VpcSecurityGroupIds]
        - !Ref AWS::NoValue
      Events:
        ProxyApi:
          Type: HttpApi
          Properties:
            ApiId: !Ref AppHttpApi
            Path: /{proxy+}
            Method: ANY
        RootApi:
          Type: HttpApi
          Properties:
            ApiId: !Ref AppHttpApi
            Path: /
            Method: ANY
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambdaVPCAccessExecutionRole
        - Statement:
            - Effect: Allow
              Action:
                - ssm:GetParameter
                - ssm:GetParameters
              Resource:
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/my-fitness-app/*"
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource:
                - !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:my-fitness-app/*"
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        EntryPoints:
          - lambda-handler.mjs
        Minify: true
        Sourcemap: true
        Target: "node20"
        External:
          # Loại bỏ aws-sdk v2 (đã có sẵn trong runtime). Keep @aws-sdk/* (v3) if used.
          - aws-sdk
          # Để Prisma nằm ngoài bundle và cài riêng ở bước InstallCommands
          - "@prisma/client"

Outputs:
  ApiUrl:
    Description: Base URL of the HTTP API
    Value: !Sub "https://${AppHttpApi}.execute-api.${AWS::Region}.amazonaws.com"
